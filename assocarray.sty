% !TeX encoding = UTF-8
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
\def\assocarrayname           {assocarray}                           %
\def\xstringversion              {0.01}                              %
%                                                                    %
\def\xstringdate              {2020/12/14}                           %
%                                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                    %
% Author     : João Lourenço                                         %
% Status     : Maintained                                            %
% Maintainer : João Lourenço                                         %
% Email      : joao.lourenco@fct.unl.pt                              %
% Package URL:                                                       %
% Bug tracker: https://github.com/joaomlourenco/assocarray/issues    %
% Repository : https://github.com/joaomlourenco/assocarray           %
% Copyright  : João Lourenço 2020                                    %
% Licence    : Released under the LaTeX Project Public License v1.3c %
%              or later, see http://www.latex-project.org/lppl.txt   %
% Files      : 1) assocarray.sty                                     %
%              2) assocarray.tex                                     %
%              3) assocarray-example.tex                             %
%              4) README                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\NeedsTeXFormat{LaTeX2e}[1995/12/01]

\ProvidesPackage{assocarray}[\xstringdate\space v\xstringversion\space, Joao Lourenco, Provides an associative array]

\RequirePackage{xstring}

\newif\ifopt@debug
\DeclareOption{debug}{\opt@debugtrue}
\ProcessOptions\relax

\providecommand*\csnewcommand{\@star@or@long\csnew@command}
\providecommand*\csnew@command[1]{\expandafter\new@command\csname#1\endcsname}
\providecommand*\recsnewcommand{\@star@or@long\recsnew@command}
\providecommand*\recsnew@command[1]{\expandafter\renew@command\csname#1\endcsname}

% Shamelessly tolen from etoolbox
\providecommand*{\csedef}[1]{\expandafter\edef\csname#1\endcsname}
\providecommand*{\csuse}[1]{%
  \ifcsname#1\endcsname%
    \csname#1\expandafter\endcsname%
  \fi%
}
\providecommand*{\ifcsdef}[1]{%
  \ifcsname#1\endcsname%
    \expandafter\@firstoftwo%
  \else%
    \expandafter\@secondoftwo%
  \fi%
}
\providecommand*{\ifempty}[3]{%
  \edef\@if@empty{#1}%
  \ifx\@if@empty\empty#2\else#3\fi
}


%================================================================
% FORLOOP
% \forloop[⟨step⟩]{⟨counter⟩}{⟨initial value⟩}{⟨condition⟩}{⟨code⟩}
%================================================================
\newcommand*{\@newcounter}[1]{%
  \ifcsname c@#1\endcsname\else\newcounter{#1}\fi%
}
\newif\ifforcontinue
\newcommand{\forbreak}{\forcontinuefalse}
\newcommand{\forloop}[5][1]{%
% \forloop[⟨step⟩]{⟨counter⟩}{⟨initial value⟩}{⟨condition⟩}{⟨code⟩}
    \@newcounter{#2}%
    \setcounter{#2}{#3}%
    \forcontinuetrue%
    % \typeout{M @forloop{#1}{#2}{\arabic{#2}}{#4}}%
    \@forloop@{#1}{#2}{#3}{#4}{#5}%
}%
\newcommand{\@forloop@}[5]{%
% \@forloop[⟨step⟩]{⟨counter⟩}{⟨initial value⟩}{⟨condition⟩}{⟨code⟩}
    % \typeout{L @forloop[#1]{#2}{\arabic{#2}}{#4}}%
    \ifnum#4\relax%
        #5%
        \addtocounter{#2}{#1}%
        \ifforcontinue%
          \@forloop@{#1}{#2}{\value{#2}}{#4}{#5}%
        \fi%
    \fi%
}%


%================================================================
% ASSOCARRAY
%================================================================
\newcommand*{\assocarray}[1]{%
  \csnewcommand*{#1}[1][]{\@ifstar{\@aadefstar@ii{#1}[##1]}{\@aadefuse@ii{#1}{##1}}}%
  \newcounter{@aa@#1@cnt}%
  \setcounter{@aa@#1@cnt}{0}%
  %% The following command is only for backward compatibility
  \csnewcommand{the#1}[1][]{\@aause@ii{#1}{##1}}%
}

\def\@aadefstar@ii#1[#2]{%
  % \typeout{@aadefstar@ii{⟨name⟩}{⟨index⟩}}%
  \@ifnextchar:{\@aadefstar@iiia{#1}}{\@aadefstar@iiib{#1}}%
}

\def\@aadefstar@iiia#1:=#2{%
  \@aadefstar@iiib#1[*]:=#2[*]%
}

\def\@aadefstar@iiib#1[#2]:=#3{\@aadefstar@iiic{#1}[#2]:=#3}

\def\@aadefstar@iiic#1[#2]:=#3[#4]{%
  \typeout{@aadefstar@iiic [#1[#2]:=#3[#4]]}%
  \stepcounter{@aa@#1@cnt}%
  % \ifcsdef{@aa@#1*@\arabic{@aa@#1@cnt}@idx}{%
  %   \textbf{@aa@#1*@\arabic{@aa@#1@cnt}@idx already defined}%
  % }{%
    \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@idx}{#2}%
    \StrCut{#2}{*}\@aa@cutL\@aa@cutR%
    \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@idxL}{\@aa@cutL}%
    \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@idxR}{\@aa@cutR}%
  % }%
  % \ifcsdef{@aa@#1*@\arabic{@aa@#1@cnt}@Vkey}{%
  %   \errmessage{@aa@#1*@\arabic{@aa@#1@cnt}@Vkey already defined}%
  % }{%
    \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@Vkey}{#3}%
  % }%
  % \ifcsdef{@aa@#1*@\arabic{@aa@#1@cnt}@Vidx}{%
  %   \errmessage{@aa@#1*@\arabic{@aa@#1@cnt}@Vidx already defined}%
  % }{%
    \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@Vidx}{#4}%
    \StrCut{#4}{*}\@aa@cutL\@aa@cutR%
    \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@VidxL}{\@aa@cutL}%
    \csedef{@aa@#1*@\arabic{@aa@#1@cnt}@VidxR}{\@aa@cutR}%
  % }%
  \par
  {------------------------------------------------}\par%
  {AA[\arabic{@aa@#1@cnt}] #1[#2]:=#3[#4]}\par%
  {AA[\arabic{@aa@#1@cnt}] L(#2):=\csuse{@aa@#1*@\arabic{@aa@#1@cnt}@idxL}}\par%
  {AA[\arabic{@aa@#1@cnt}] R(#2):=\csuse{@aa@#1*@\arabic{@aa@#1@cnt}@idxR}}\par%
  {AA[\arabic{@aa@#1@cnt}] L(#4):=\csuse{@aa@#1*@\arabic{@aa@#1@cnt}@VidxL}}\par%
  {AA[\arabic{@aa@#1@cnt}] R(#4):=\csuse{@aa@#1*@\arabic{@aa@#1@cnt}@VidxR}}\par%
  {------------------------------------------------}\par%
}


\newcommand*{\@aadefuse@ii}[2]{%
  % #1 = name
  % #2 = index
  % \typeout{AA @aadefuse@ii #1 #2}%
  \@ifnextchar:{\@aadef@iii{#1}{#2}}{\@aause@ii{#1}{#2}}%
}

\def\@aadef@iii#1#2:=#3{%
  % #1 = name
  % #2 = index
  % #3 = value
  \typeout{AA def #1[#2]:='#3'}%
  \ifcsdef{@aa@#1@#2}%
    {\textbf{#1[#2]} is already defined!}%
    {\csedef{@aa@#1@#2}{#3}}%
}

\newif\iffound%
\newcommand{\@aause@ii}[2]{%
  % #1 = name
  % #2 = index
  \foundfalse
  \ifcsdef{@aa@#1@#2}{%
    % Direct use
    \foundtrue%
    \csuse{@aa@#1@#2}%
  }{%
    \ifnum\value{@aa@#1@cnt}>0\relax% There are redirections
      \forloop[-1]{@aa@redir@#1@cnt}{\arabic{@aa@#1@cnt}}{\value{@aa@redir@#1@cnt}>0}{%
        % R\arabic{@aa@redir@#1@cnt}
        \IfEq{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxL}}{}{%
          \edef\@aa@cutL{}%
          \edef\@aa@idxRest{#2}%
        }{%
          \StrCut{#2}{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxL}}\@aa@cutL\@aa@idxRest%
        }%
        \IfEq{\@aa@cutL}{}{%
          \IfEq{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxR}}{}{%
            \edef\@aa@cutR{}%
          }{%
            \StrCut{\@aa@idxRest}{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@idxR}}\@aa@idxRest\@aa@cutR%
          }%
          \IfEq{\@aa@cutR}{}{%
            $>$\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@Vkey}%
                 [\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxL}%
                  \@aa@idxRest%
                  \csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxR}]
            \@aause@ii{\csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@Vkey}}{%
                              \csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxL}%
                              \@aa@idxRest%
                              \csuse{@aa@#1*@\arabic{@aa@redir@#1@cnt}@VidxR}}%
            \forbreak%
          }{%
            % Failed right…
          }%
        }{%
          % Failed left…
        }%
      }%
    \fi%
  }%
  \iffound
  \else
    \textbf{ERR: #1[#2] undefined}
  \fi
}
\endinput
